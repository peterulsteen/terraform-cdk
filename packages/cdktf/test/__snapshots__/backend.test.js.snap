// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`artifactory backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"artifactory\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"artifactory\\": {
        \\"username\\": \\"SheldonCooper\\",
        \\"password\\": \\"AmyFarrahFowler\\",
        \\"url\\": \\"https://custom.artifactoryonline.com/artifactory\\",
        \\"repo\\": \\"foo\\",
        \\"subpath\\": \\"terraform-bar\\"
      }
    }
  }
}"
`;

exports[`azurerm backend access key 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"azurerm\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"azurerm\\": {
        \\"storage_account_name\\": \\"abcd1234\\",
        \\"container_name\\": \\"tfstate\\",
        \\"key\\": \\"prod.terraform.tfstate\\",
        \\"access_key\\": \\"abcdefghijklmnopqrstuvwxyz0123456789...\\"
      }
    }
  }
}"
`;

exports[`azurerm backend cli/sp 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"azurerm\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"azurerm\\": {
        \\"resource_group_name\\": \\"StorageAccount-ResourceGroup\\",
        \\"storage_account_name\\": \\"abcd1234\\",
        \\"container_name\\": \\"tfstate\\",
        \\"key\\": \\"prod.terraform.tfstate\\",
        \\"client_id\\": \\"ARM_CLIENT_ID\\",
        \\"client_secret\\": \\"ARM_CLIENT_SECRET\\",
        \\"endpoint\\": \\"ARM_ENDPOINT\\",
        \\"environment\\": \\"public\\"
      }
    }
  }
}"
`;

exports[`azurerm backend msi 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"azurerm\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"azurerm\\": {
        \\"storage_account_name\\": \\"abcd1234\\",
        \\"container_name\\": \\"tfstate\\",
        \\"key\\": \\"prod.terraform.tfstate\\",
        \\"use_msi\\": true,
        \\"subscription_id\\": \\"00000000-0000-0000-0000-000000000000\\",
        \\"tenant_id\\": \\"00000000-0000-0000-0000-000000000000\\",
        \\"msi_endpoint\\": \\"ARM_MSI_ENDPOINT\\"
      }
    }
  }
}"
`;

exports[`azurerm backend sas 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"azurerm\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"azurerm\\": {
        \\"storage_account_name\\": \\"abcd1234\\",
        \\"container_name\\": \\"tfstate\\",
        \\"key\\": \\"prod.terraform.tfstate\\",
        \\"sas_token\\": \\"abcdefghijklmnopqrstuvwxyz0123456789...\\"
      }
    }
  }
}"
`;

exports[`consul backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"consul\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"consul\\": {
        \\"address\\": \\"demo.consul.io\\",
        \\"scheme\\": \\"https\\",
        \\"path\\": \\"full/path\\",
        \\"access_token\\": \\"CONSUL_HTTP_TOKEN\\",
        \\"ca_file\\": \\"CONSUL_CACERT\\",
        \\"cert_file\\": \\"CONSUL_CLIENT_CERT\\",
        \\"datacenter\\": \\"agent\\",
        \\"gzip\\": true,
        \\"http_auth\\": \\"CONSUL_HTTP_AUTH\\",
        \\"key_file\\": \\"CONSUL_CLIENT_KEY\\",
        \\"lock\\": true
      }
    }
  }
}"
`;

exports[`cos backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"cos\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"cos\\": {
        \\"region\\": \\"ap-guangzhou\\",
        \\"bucket\\": \\"bucket-for-terraform-state-1258798060\\",
        \\"prefix\\": \\"terraform/state\\",
        \\"secret_id\\": \\"TENCENTCLOUD_SECRET_ID\\",
        \\"secret_key\\": \\"TENCENTCLOUD_SECRET_KEY\\",
        \\"acl\\": \\"private\\",
        \\"encrypt\\": true,
        \\"key\\": \\"terraform.tfstate\\"
      }
    }
  }
}"
`;

exports[`etcd backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"etcd\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"etcd\\": {
        \\"path\\": \\"path/to/terraform.tfstate\\",
        \\"endpoints\\": \\"http://one:4001 http://two:4001\\",
        \\"username\\": \\"the user\\",
        \\"password\\": \\"the password\\"
      }
    }
  }
}"
`;

exports[`etcdv3 backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"etcdv3\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"etcdv3\\": {
        \\"endpoints\\": [
          \\"etcd-1:2379\\",
          \\"etcd-2:2379\\",
          \\"etcd-3:2379\\"
        ],
        \\"lock\\": true,
        \\"prefix\\": \\"terraform-state/\\",
        \\"username\\": \\"ETCDV3_USERNAME\\",
        \\"password\\": \\"ETCDV3_PASSWORD\\",
        \\"cacert_path\\": \\"CA bundle\\",
        \\"cert_path\\": \\"certificate\\",
        \\"key_path\\": \\"encoded key\\"
      }
    }
  }
}"
`;

exports[`gcs backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"gcs\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"gcs\\": {
        \\"bucket\\": \\"tf-state-prod\\",
        \\"prefix\\": \\"terraform/state\\",
        \\"access_token\\": \\"Authorization: Bearer\\",
        \\"credentials\\": \\"GOOGLE_BACKEND_CREDENTIALS\\",
        \\"encryption_key\\": \\"GOOGLE_ENCRYPTION_KEY\\"
      }
    }
  }
}"
`;

exports[`http backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"http\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"http\\": {
        \\"address\\": \\"http://myrest.api.com/foo\\",
        \\"lock_address\\": \\"http://myrest.api.com/foo\\",
        \\"unlock_address\\": \\"http://myrest.api.com/foo\\",
        \\"lock_method\\": \\"LOCK\\",
        \\"password\\": \\"HTTP basic auth password\\",
        \\"retry_max\\": 2,
        \\"retry_wait_max\\": 30,
        \\"retry_wait_min\\": 1,
        \\"skip_cert_verification\\": false,
        \\"unlock_method\\": \\"UNLOCK\\",
        \\"update_method\\": \\"POST\\",
        \\"username\\": \\"HTTP basic auth user\\"
      }
    }
  }
}"
`;

exports[`local backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"local\\",
      \\"overrides\\": {
        \\"stack\\": {},
        \\"backend\\": {
          \\"workspace_dir\\": \\"local_workspace\\"
        }
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"local\\": {
        \\"path\\": \\"relative/path/to/terraform.tfstate\\",
        \\"workspace_dir\\": \\"local_workspace\\"
      }
    }
  }
}"
`;

exports[`manta backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"manta\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"manta\\": {
        \\"path\\": \\"random/path\\",
        \\"object_name\\": \\"terraform.tfstate\\",
        \\"account\\": \\"SDC_ACCOUNT\\",
        \\"user\\": \\"SDC_USER\\",
        \\"url\\": \\"MANTA_URL\\",
        \\"key_material\\": \\"SDC_KEY_MATERIAL\\",
        \\"key_id\\": \\"SDC_KEY\\",
        \\"insecure_skip_tls_verify\\": false
      }
    }
  }
}"
`;

exports[`oss backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"oss\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"oss\\": {
        \\"bucket\\": \\"bucket-for-terraform-state\\",
        \\"prefix\\": \\"path/mystate\\",
        \\"key\\": \\"version-1.tfstate\\",
        \\"region\\": \\"cn-beijing\\",
        \\"tablestore_endpoint\\": \\"https://terraform-remote.cn-hangzhou.ots.aliyuncs.com\\",
        \\"tablestore_table\\": \\"statelock\\",
        \\"access_key\\": \\"ALICLOUD_ACCESS_KEY\\",
        \\"secret_key\\": \\"ALICLOUD_SECRET_KEY\\",
        \\"security_token\\": \\"ALICLOUD_SECURITY_TOKEN\\",
        \\"ecs_role_name\\": \\"RAM Role Name\\",
        \\"acl\\": \\"object acl\\",
        \\"assume_role\\": {
          \\"role_arn\\": \\"ALICLOUD_ASSUME_ROLE_ARN\\",
          \\"policy\\": \\"restrictive policy\\",
          \\"session_name\\": \\"ALICLOUD_ASSUME_ROLE_SESSION_NAME\\",
          \\"session_expiration\\": 3600
        },
        \\"encrypt\\": true,
        \\"endpoint\\": \\"ALICLOUD_OSS_ENDPOINT\\",
        \\"profile\\": \\"ALICLOUD_PROFILE\\",
        \\"shared_credentials_file\\": \\"ALICLOUD_SHARED_CREDENTIALS_FILE\\"
      }
    }
  }
}"
`;

exports[`pg backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"pg\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"pg\\": {
        \\"conn_str\\": \\"postgres://user:pass@db.example.com/terraform_backend\\",
        \\"schema_name\\": \\"terraform_remote_state\\",
        \\"skip_schema_creation\\": true
      }
    }
  }
}"
`;

exports[`remote backend multi ws 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"remote\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"remote\\": {
        \\"hostname\\": \\"app.terraform.io\\",
        \\"organization\\": \\"company\\",
        \\"token\\": \\"aToken\\",
        \\"workspaces\\": {
          \\"prefix\\": \\"my-app-\\"
        }
      }
    }
  }
}"
`;

exports[`remote backend single ws 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"remote\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"remote\\": {
        \\"hostname\\": \\"app.terraform.io\\",
        \\"organization\\": \\"company\\",
        \\"workspaces\\": {
          \\"name\\": \\"my-app-prod\\"
        }
      }
    }
  }
}"
`;

exports[`s3 backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"s3\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"s3\\": {
        \\"bucket\\": \\"mybucket\\",
        \\"key\\": \\"path/to/my/key\\",
        \\"region\\": \\"us-east-1\\",
        \\"endpoint\\": \\"AWS_S3_ENDPOINT\\",
        \\"encrypt\\": true,
        \\"acl\\": \\"Canned ACL\\",
        \\"access_key\\": \\"AWS_ACCESS_KEY_ID\\",
        \\"secret_key\\": \\"AWS_SECRET_ACCESS_KEY\\",
        \\"kms_key_id\\": \\"ARN of a KMS Key\\",
        \\"dynamodb_table\\": \\"DynamoDB table\\",
        \\"profile\\": \\"AWS_PROFILE\\",
        \\"shared_credentials_file\\": \\"~/.aws/credentials\\",
        \\"token\\": \\"AWS_SESSION_TOKEN\\",
        \\"role_arn\\": \\"role to be assumed\\",
        \\"assume_role_policy\\": \\"permissions for assuming role\\",
        \\"external_id\\": \\"external ID\\",
        \\"session_name\\": \\"role session name\\",
        \\"workspace_key_prefix\\": \\"env:\\",
        \\"dynamodb_endpoint\\": \\"AWS_DYNAMODB_ENDPOINT\\",
        \\"iam_endpoint\\": \\"AWS_IAM_ENDPOINT\\",
        \\"sts_endpoint\\": \\"AWS_STS_ENDPOINT\\",
        \\"force_path_style\\": false,
        \\"skip_credentials_validation\\": false,
        \\"skip_metadata_api_check\\": true,
        \\"sse_customer_key\\": \\"AWS_SSE_CUSTOMER_KEY\\",
        \\"max_retries\\": 5
      }
    }
  }
}"
`;

exports[`swift backend 1`] = `
"{
  \\"//\\": {
    \\"metadata\\": {
      \\"version\\": \\"stubbed\\",
      \\"stackName\\": \\"test\\",
      \\"backend\\": \\"swift\\",
      \\"overrides\\": {
        \\"stack\\": {}
      }
    }
  },
  \\"terraform\\": {
    \\"backend\\": {
      \\"swift\\": {
        \\"container\\": \\"terraform-state\\",
        \\"archive_container\\": \\"terraform-state-archive\\",
        \\"auth_url\\": \\"OS_AUTH_URL\\",
        \\"cloud\\": \\"OS_CLOUD\\",
        \\"state_name\\": \\"tfstate.tf\\",
        \\"user_name\\": \\"OS_USERNAME\\",
        \\"user_id\\": \\"OS_USER_ID\\",
        \\"password\\": \\"OS_PASSWORD\\",
        \\"application_credential_id\\": \\"ID of app cred\\",
        \\"application_credential_name\\": \\"name of app cred\\",
        \\"application_credential_secret\\": \\"secret of app cred\\",
        \\"token\\": \\"OS_AUTH_TOKEN\\",
        \\"region_name\\": \\"OS_REGION_NAME\\",
        \\"tenant_id\\": \\"OS_TENANT_ID\\",
        \\"tenant_name\\": \\"OS_TENANT_NAME\\",
        \\"domain_id\\": \\"OS_USER_DOMAIN_ID\\",
        \\"domain_name\\": \\"OS_USER_DOMAIN_NAME\\",
        \\"user_domain_name\\": \\"OS_USER_DOMAIN_NAME\\",
        \\"user_domain_id\\": \\"OS_USER_DOMAIN_ID\\",
        \\"project_domain_name\\": \\"OS_PROJECT_DOMAIN_NAME\\",
        \\"project_domain_id\\": \\"OS_PROJECT_DOMAIN_ID\\",
        \\"default_domain\\": \\"OS_DEFAULT_DOMAIN\\",
        \\"insecure\\": true,
        \\"cacert_file\\": \\"OS_CACERT\\",
        \\"cert\\": \\"OS_CERT\\",
        \\"key\\": \\"OS_KEY\\",
        \\"expire_after\\": \\"3d\\"
      }
    }
  }
}"
`;
